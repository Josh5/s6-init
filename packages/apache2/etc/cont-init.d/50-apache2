#!/usr/bin/with-contenv bash


CWD=${PWD};
SCRIPT_NAME=$(basename $BASH_SOURCE);


apache_config() {
    mkdir -p \
        /app/www \
        /config/etc/apache2 \
        /logs/apache2${APACHE_SUFFIX} \
        /run/apache2

    APACHE_CONF_SOURCE=/etc/apache2_src;
    if [[ ! -e /etc/apache2_src ]]; then
        mv /etc/apache2 ${APACHE_CONF_SOURCE};
    fi
    if [[ ! -f /config/etc/apache2/apache2.conf ]]; then
        echo "**** (${SCRIPT_NAME} - apache_config) Setting up initial apache2 configs ****";
        mkdir -p \
            /config/etc/apache2 \
            /config/etc/apache2/sites-available \
            /config/etc/apache2/sites-enabled;
        # Copy the default configs from /etc to /config
        cp -rf ${APACHE_CONF_SOURCE}/* /config/etc/apache2/;
        # Copy defaults to /config
        cp -rf /defaults/apache2/etc/apache2/* /config/etc/apache2/;
        # Remove current sites
        rm -rf /config/etc/apache2/sites-available/*;
        rm -rf /config/etc/apache2/sites-enabled/*;
        # Install and enable default site config
        cp -f /defaults/apache2/default.conf /config/etc/apache2/sites-available/default.conf;
        cd /config/etc/apache2/sites-enabled/;
        ln -s ../sites-available/default.conf default.conf;
        cd ${CWD};
    fi
    if [[ ! -h /etc/apache2 ]]; then
        echo "**** (${SCRIPT_NAME} - apache_config) Symlink /etc/apache2 -> /config/etc/apache2 ****";
        rm -rf /etc/apache2;
        ln -s /config/etc/apache2 /etc/apache2;
    fi
    # Install the default placeholder html file
    if [[ $(find /app/www -type f | wc -l) -eq 0 ]]; then
        echo "**** (${SCRIPT_NAME} - apache_config) Install default index page ****";
        cp /defaults/apache2/index.html /app/www/index.html;
    fi
    # Configure any apache env variables
    if [[ ! -z ${APACHE_SUFFIX} ]]; then
        echo "**** (${SCRIPT_NAME} - apache_config) Update Apache SUFFIX environment variable to '${APACHE_SUFFIX}' ****";
        sed -i -e "s|SUFFIX=.*$|SUFFIX=${APACHE_SUFFIX}|" /config/etc/apache2/envvars;
    fi
    if [[ ! -z ${APACHE_LOG_DIR} ]]; then
        echo "**** (${SCRIPT_NAME} - apache_config) Update Apache APACHE_LOG_DIR environment variable to '${APACHE_LOG_DIR}' ****";
        sed -i -e "s|APACHE_LOG_DIR=.*$|APACHE_LOG_DIR=${APACHE_LOG_DIR}|" /config/etc/apache2/envvars;
    fi
    # Now that the apache variables are set, lets import all of them
    source /config/etc/apache2/envvars;
    # Remove any previous pid files
    if [[ -f ${APACHE_PID_FILE} ]]; then
        rm -f ${APACHE_PID_FILE};
    fi
    # Make the log directory if it does not already exists
    mkdir -p ${APACHE_LOG_DIR};
    # Set default access logs to stdout and stderr
    mkdir -p /var/log/apache2${APACHE_SUFFIX};
    if [[ ! -h /var/log/apache2${APACHE_SUFFIX}/access.log ]]; then
        echo "**** (${SCRIPT_NAME} - apache_config) Redirect default apache2 access.log to stdout ****";
        cd /var/log/apache2${APACHE_SUFFIX};
        rm -f access.log;
        ln -s /dev/stdout access.log;
        cd ${CWD};
    fi
    if [[ ! -h /var/log/apache2${APACHE_SUFFIX}/error.log ]]; then
        echo "**** (${SCRIPT_NAME} - apache_config) Redirect default apache2 error.log to stderr ****";
        cd /var/log/apache2${APACHE_SUFFIX};
        rm -f error.log;
        ln -s /dev/stderr error.log;
        cd ${CWD};
    fi
    if [[ ! -h /var/log/apache2${APACHE_SUFFIX}/other_vhosts_access.log ]]; then
        echo "**** (${SCRIPT_NAME} - apache_config) Redirect default apache2 other_vhosts_access.log to stdout ****";
        cd /var/log/apache2${APACHE_SUFFIX};
        rm -f other_vhosts_access.log;
        ln -s /dev/stdout other_vhosts_access.log;
        cd ${CWD};
    fi
    # Set mpm module
    if [[ ! -z ${APACHE_MPM_MODULE} ]]; then
        if [[ ${APACHE_MPM_MODULE} == 'prefork' ]]; then
            echo "**** (${SCRIPT_NAME} - apache_config) Setting apache mpm to prefork ****";
            MPM_CONFIG=/config/etc/apache2/mods-available/mpm_prefork.conf
            a2dismod mpm_worker
            a2dismod mpm_event
            a2enmod mpm_prefork
        fi
        if [[ ${APACHE_MPM_MODULE} == 'worker' ]]; then
            echo "**** (${SCRIPT_NAME} - apache_config) Setting apache mpm to event ****";
            MPM_CONFIG=/config/etc/apache2/mods-available/mpm_worker.conf
            a2dismod mpm_prefork
            a2dismod mpm_event
            a2enmod mpm_worker
        fi
        if [[ ${APACHE_MPM_MODULE} == 'event' ]]; then
            echo "**** (${SCRIPT_NAME} - apache_config) Setting apache mpm to event ****";
            MPM_CONFIG=/config/etc/apache2/mods-available/mpm_event.conf
            a2dismod mpm_prefork
            a2dismod mpm_worker
            a2enmod mpm_event
        fi
        # If configured, set the number of StartServers
        if [[ ! -z ${MPM_CONFIG} && ! -z ${APACHE_MPM_START_SERVERS} ]]; then
            echo "**** (${SCRIPT_NAME} - apache_config) Setting apache mpm StartServers = ${APACHE_MPM_START_SERVERS} ****";
            sed -i -e "s|StartServers.*$|StartServers                ${APACHE_MPM_START_SERVERS}|" ${MPM_CONFIG};
        fi
        # If configured, set the number of MinSpareThreads
        if [[ ! -z ${MPM_CONFIG} && ! -z ${APACHE_MPM_MIN_SPARE_THREADS} ]]; then
            echo "**** (${SCRIPT_NAME} - apache_config) Setting apache mpm MinSpareThreads = ${APACHE_MPM_MIN_SPARE_THREADS} ****";
            sed -i -e "s|MinSpareThreads.*$|MinSpareThreads             ${APACHE_MPM_MIN_SPARE_THREADS}|" ${MPM_CONFIG};
        fi
        # If configured, set the number of MaxSpareThreads
        if [[ ! -z ${MPM_CONFIG} && ! -z ${APACHE_MPM_MAX_SPARE_THREADS} ]]; then
            echo "**** (${SCRIPT_NAME} - apache_config) Setting apache mpm MaxSpareThreads = ${APACHE_MPM_MAX_SPARE_THREADS} ****";
            sed -i -e "s|MaxSpareThreads.*$|MaxSpareThreads             ${APACHE_MPM_MAX_SPARE_THREADS}|" ${MPM_CONFIG};
        fi
        # If configured, set the number of ThreadLimit
        if [[ ! -z ${MPM_CONFIG} && ! -z ${APACHE_MPM_THREAD_LIMIT} ]]; then
            echo "**** (${SCRIPT_NAME} - apache_config) Setting apache mpm ThreadLimit = ${APACHE_MPM_THREAD_LIMIT} ****";
            sed -i -e "s|ThreadLimit.*$|ThreadLimit                 ${APACHE_MPM_THREAD_LIMIT}|" ${MPM_CONFIG};
        fi
        # If configured, set the number of ThreadsPerChild
        if [[ ! -z ${MPM_CONFIG} && ! -z ${APACHE_MPM_THREADS_PER_CHILD} ]]; then
            echo "**** (${SCRIPT_NAME} - apache_config) Setting apache mpm ThreadsPerChild = ${APACHE_MPM_THREADS_PER_CHILD} ****";
            sed -i -e "s|ThreadsPerChild.*$|ThreadsPerChild             ${APACHE_MPM_THREADS_PER_CHILD}|" ${MPM_CONFIG};
        fi
        # If configured, set the number of MaxRequestWorkers
        if [[ ! -z ${MPM_CONFIG} && ! -z ${APACHE_MPM_MAX_REQ_WORKERS} ]]; then
            echo "**** (${SCRIPT_NAME} - apache_config) Setting apache mpm MaxRequestWorkers = ${APACHE_MPM_MAX_REQ_WORKERS} ****";
            sed -i -e "s|MaxRequestWorkers.*$|MaxRequestWorkers           ${APACHE_MPM_MAX_REQ_WORKERS}|" ${MPM_CONFIG};
        fi
        # If configured, set the number of MaxConnectionsPerChild
        if [[ ! -z ${MPM_CONFIG} && ! -z ${APACHE_MPM_MAX_CONN_PER_CHILD} ]]; then
            echo "**** (${SCRIPT_NAME} - apache_config) Setting apache mpm MaxConnectionsPerChild = ${APACHE_MPM_MAX_CONN_PER_CHILD} ****";
            sed -i -e "s|MaxConnectionsPerChild.*$|MaxConnectionsPerChild      ${APACHE_MPM_MAX_CONN_PER_CHILD}|" ${MPM_CONFIG};
        fi
    fi
    # Finally set permissions on all folders
    chown -R $PUID:$PGID \
        /run/apache2 \
        /var/lib/apache2 \
        /app/www
    chmod -R g+w \
        /app/www
}


apache_config;
